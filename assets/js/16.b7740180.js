(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{305:function(t,a,s){"use strict";s.r(a);var e=s(13),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"利用-gitlab-ci-cd-jenkins-实现自动构建-自动部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#利用-gitlab-ci-cd-jenkins-实现自动构建-自动部署"}},[t._v("#")]),t._v(" 利用 Gitlab CI/CD + Jenkins 实现自动构建，自动部署")]),t._v(" "),a("p",[t._v("本来只是想用 curl 去模拟触发部署静态资源的请求的。后来想到如果把这个操作交给 gitlab 操作岂不是更方便？ 所以这几天折腾了一下 gitlab 的 CI/CD,读了一些 gitlab 的官方文档，进一步完善了.gitlab-ci.yml。记录这个过程如下：")]),t._v(" "),a("h2",{attrs:{id:"模拟请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模拟请求"}},[t._v("#")]),t._v(" 模拟请求")]),t._v(" "),a("blockquote",[a("p",[t._v("利用 curl 命令行工具去模拟我们点击 "),a("code",[t._v("开始构建")]),t._v(" 时那一时刻发起的第一个请求。")])]),t._v(" "),a("h3",{attrs:{id:"第一个请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一个请求"}},[t._v("#")]),t._v(" 第一个请求")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/365160/1593768148367-d6c374ae-c772-4494-b8f8-3fc6c26ed8f0.png#align=left&display=inline&height=563&margin=%5Bobject%20Object%5D&name=image.png&originHeight=563&originWidth=808&size=58988&status=done&style=none&width=808",alt:"image.png"}}),t._v("\n经实践，第一个请求为上面的这个请求，重要参数是 json：xxx 和 Cookie，请求结果是一个 303 重定向。\n"),a("a",{attrs:{name:"XGAOu"}})]),t._v(" "),a("h3",{attrs:{id:"编写请求脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写请求脚本"}},[t._v("#")]),t._v(" 编写请求脚本")]),t._v(" "),a("p",[t._v("方便起见，首先用浏览器提供的方式，复制该请求。\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/365160/1593768350093-0da708c7-2e03-448d-bb7b-f8951e388695.png#align=left&display=inline&height=263&margin=%5Bobject%20Object%5D&name=image.png&originHeight=525&originWidth=599&size=61074&status=done&style=none&width=300",alt:"image.png"}}),t._v("复制了整个请求之后，删除了一些不必要的参数之后，与提取 env， branch 这些变量之后， 得知下面的脚本")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("uat\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("branch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("test\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://xxxx/job/tao.tao/build?delay=0sec'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Cookie: JSESSIONID=8EF2BD7082FB37279EE93A3B7BB3ED25'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --data-raw "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'json={"parameter":[{"name":"PJ","value":"crm-finance-static"},{"name":"MYENV", "value":"\'')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$env")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'"},{"name":"TAG","value":"\'')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$branch")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\"}]}'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--compressed")]),t._v("\n\n")])])]),a("p",[t._v("上面的脚本是用 cookie 做用户认证的，既然是 cookie,就存在过期的可能。还好 Jenkins 提供了 token 的方法给用户。\n具体看官方文档这两篇文章：\n"),a("a",{attrs:{href:"https://www.jenkins.io/doc/book/system-administration/authenticating-scripted-clients/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.jenkins.io/doc/book/system-administration/authenticating-scripted-clients/"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://www.jenkins.io/blog/2018/07/02/new-api-token-system/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.jenkins.io/blog/2018/07/02/new-api-token-system/"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("配置了 token 之后，修改之后脚本")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("uat\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("branch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("test\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://xxxx/job/tao.tao/build?delay=0sec'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--user")]),t._v(" tao-tao:1169ee9c0493b27d915632c0577fdd66fd "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --data-raw "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'json={"parameter":[{"name":"PJ","value":"crm-finance-static"},{"name":"MYENV", "value":"\'')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$env")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'"},{"name":"TAG","value":"\'')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$branch")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\"}]}'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--compressed")]),t._v("\n\n")])])]),a("p",[t._v("我们直接使用了 "),a("code",[t._v("sh 上面的脚本.sh")]),t._v("  执行，打开 jenkins 发布平台就可以看到有任务在执行了")]),t._v(" "),a("p",[a("a",{attrs:{name:"KZ9kd"}})]),t._v(" "),a("h2",{attrs:{id:"安排到-gitlab-上面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安排到-gitlab-上面"}},[t._v("#")]),t._v(" 安排到 gitlab 上面")]),t._v(" "),a("blockquote",[a("p",[t._v("注：原来已经有了.gitlab-ci.yml 文件存在了，主要负责： 当我们 push 代码到 gitlab 仓库之后，自动执行 build 命令，并且复制到目标静态资源仓库中，之后再 push 到 gitlab 上")])]),t._v(" "),a("blockquote",[a("p",[t._v("不熟悉 gitlab 工作流的话，可以先看，开卷有益")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://docs.gitlab.com/ee/ci/introduction/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.gitlab.com/ee/ci/introduction/"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://docs.gitlab.com/ce/ci/quick_start/README.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.gitlab.com/ce/ci/quick_start/README.html"),a("OutboundLink")],1)])])]),t._v(" "),a("p",[t._v("增加如下代码：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deploy\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /^(test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("pre"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("dev)$/\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" command "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("v curl "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("/dev/null 2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" exit 1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#判断是否执行curl，否则推荐脚本")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' env="$REF_NAME" '),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认env 与 分支名一致， 特殊处理uat --》 test")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v('\n      if [ "$REF_NAME" == "test" ]; then\n        env="uat"\n      fi')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" sh ./scripts/fetch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("jenkins.sh $env $REF_NAME "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行脚本， 带上参数")]),t._v("\n")])])]),a("p",[t._v("最初我是放在 after_script 中执行的，后来发现 after_script 即使脚本执行出错，gitlab 上面的 CI/CD/Pipelines 的 Job 的状态，照样是 passed 状态。\n搜索得知 after_script 中是忽略失败的，如果需要支持的话，要另外安装脚本，具体可以看如下解释："),a("a",{attrs:{href:"https://gitlab.com/gitlab-org/gitlab-foss/-/issues/43010",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gitlab.com/gitlab-org/gitlab-foss/-/issues/43010"),a("OutboundLink")],1),t._v("，所以我后面把它放在了 script 中，这样脚本出错的话，Job 的状态也是 failed 的状态（Job 失败的话，gitlab 还给我们发了邮件）")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("另外，curl 只是模拟构建请求，但是我们如何判断请求成功还是失败的？前面我们说构建请求是返回 303 重定向的， 没有 response 内容回来，据此我们就可以判断，请求成功还是失败了，如果有请求结果的话，脚本就 exit 1")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RES")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'failed!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("p",[a("code",[t._v(".gitlab-ci.yml")]),t._v("  与 "),a("code",[t._v("fetch-jenkins.sh")]),t._v("  代码附件:\n"),a("a",{attrs:{href:"https://www.yuque.com/attachments/yuque/0/2020/yml/365160/1593771925625-835c8fda-6f86-4a8e-8270-dd43c182dbc6.yml?_lake_card=%7B%22uid%22%3A%221593771925609-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2020%2Fyml%2F365160%2F1593771925625-835c8fda-6f86-4a8e-8270-dd43c182dbc6.yml%22%2C%22name%22%3A%22.gitlab-ci.yml%22%2C%22size%22%3A1712%2C%22type%22%3A%22%22%2C%22ext%22%3A%22yml%22%2C%22progress%22%3A%7B%22percent%22%3A99%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%22FIJyr%22%2C%22card%22%3A%22file%22%7D",target:"_blank",rel:"noopener noreferrer"}},[t._v(".gitlab-ci.yml"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://www.yuque.com/attachments/yuque/0/2020/sh/365160/1593771950682-e5d84018-6882-4746-b001-082cb57a3565.sh?_lake_card=%7B%22uid%22%3A%221593771950767-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2020%2Fsh%2F365160%2F1593771950682-e5d84018-6882-4746-b001-082cb57a3565.sh%22%2C%22name%22%3A%22fetch-jenkins.sh%22%2C%22size%22%3A602%2C%22type%22%3A%22text%2Fx-sh%22%2C%22ext%22%3A%22sh%22%2C%22progress%22%3A%7B%22percent%22%3A99%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%22GoS0f%22%2C%22card%22%3A%22file%22%7D",target:"_blank",rel:"noopener noreferrer"}},[t._v("fetch-jenkins.sh"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{name:"O7ZU6"}})]),t._v(" "),a("h2",{attrs:{id:"忽略-gitlab-ci-yml-的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#忽略-gitlab-ci-yml-的作用"}},[t._v("#")]),t._v(" 忽略.gitlab-ci.yml 的作用")]),t._v(" "),a("p",[t._v("如果我们有一个这样的需要,在某一次 push,我不需要 gitlab 执行构建任务,或者我们觉得 gitlab 构建任务 pengding 太久, 或者 running 太慢。 如何解决这个痛点呢？")]),t._v(" "),a("p",[t._v("这样，我们如果控制 push 代码的时候，携带信息通知 gitlab 服务器，达到我们想要的结果。")]),t._v(" "),a("p",[t._v("很幸运，Gitlab CI/CD 是提供这个服务的，只不过有版本限制，\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/365160/1593772618316-6c282123-36bd-4ebb-87d0-68db0c2ec965.png#align=left&display=inline&height=498&margin=%5Bobject%20Object%5D&name=image.png&originHeight=498&originWidth=918&size=44078&status=done&style=stroke&width=918",alt:"image.png"}}),t._v("\n得知，我们的 gitlab runner 版本是"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/365160/1593772742447-e585f11c-9f58-44f3-8a08-94a3d9a63537.png#align=left&display=inline&height=95&margin=%5Bobject%20Object%5D&name=image.png&originHeight=128&originWidth=380&size=23639&status=done&style=none&width=283",alt:"image.png"}}),t._v("是支持 ci.skip。")]),t._v(" "),a("p",[t._v("携带 "),a("code",[t._v("-o ci.skip")]),t._v(" 之后 再 Pipelines 中就可以看到 ,如下图所示:跳过 job"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/365160/1593772891052-6450b5d5-e7ac-4f6e-b95c-93b1cf5f67cd.png#align=left&display=inline&height=87&margin=%5Bobject%20Object%5D&name=image.png&originHeight=87&originWidth=570&size=8443&status=done&style=none&width=570",alt:"image.png"}})]),t._v(" "),a("p",[a("a",{attrs:{name:"bbnOT"}})]),t._v(" "),a("h2",{attrs:{id:"本地执行-ci-cd-脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地执行-ci-cd-脚本"}},[t._v("#")]),t._v(" 本地执行 CI/CD 脚本")]),t._v(" "),a("blockquote",[a("p",[t._v("如果觉得 gitlab 构建速度太慢,结合我之前写的构建脚本,同样也可以实现自动构建,自动部署。")])]),t._v(" "),a("p",[t._v("大概脚本如下：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/usr/bin/env bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-euo")]),t._v(" pipefail\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("branch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("curPath")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("targetPath")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./build"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打包静态资源路径配置, 为了统一推荐clone在源码根目录下的build文件夹(.gitignore 已忽略build)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("commitID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rev-parse "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--short")]),t._v(" HEAD"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# get last commit SHA")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("subModule")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("finance\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("curBranch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" symbolic-ref "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--short")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-q")]),t._v(" HEAD"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# get current branch")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 首先判断是否在目标分支build")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$curBranch")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$branch")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -------------------------------------\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[t._v("\\033")]),t._v("[41;37m please checkout "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$branch")]),t._v(" before building "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[t._v("\\033")]),t._v('[0m"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -------------------------------------\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$targetPath")]),t._v('"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取分支名称")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("targetBranch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" symbolic-ref "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--short")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-q")]),t._v(" HEAD"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  判断是否在目标分支,不在的话checkout")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$targetBranch")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$branch")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$branch")]),t._v('"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$targetPath")]),t._v("/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$subModule")]),t._v('/"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$curPath")]),t._v("/dist/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$subModule")]),t._v('/"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./"')]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deploy based on '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$branch")]),t._v(" from "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$commitID")]),t._v('"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# set +e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$message")]),t._v('"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" origin\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" -\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fetch jenkins interface")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$branch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n  dev  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dev"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uat"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  pre "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pre"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  master "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[t._v("\\033")]),t._v("[41;37m not support master "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[t._v("\\033")]),t._v('[0m"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  *    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -------------------------------------\n         "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[t._v("\\033")]),t._v("[41;37m branch("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$branch")]),t._v(") error before fetch jenkins "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[t._v("\\033")]),t._v('[0m"')]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -------------------------------------\n         "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" ./scripts/fetch-jenkins.sh "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$env")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$branch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行触发jenkins请求脚本")]),t._v("\n\n")])])]),a("p",[t._v("附件如下：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.yuque.com/attachments/yuque/0/2020/sh/365160/1594003103252-ceeff864-c94e-4ed9-8c3d-a842a4b7f2f6.sh?_lake_card=%7B%22uid%22%3A%221594003103166-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2020%2Fsh%2F365160%2F1594003103252-ceeff864-c94e-4ed9-8c3d-a842a4b7f2f6.sh%22%2C%22name%22%3A%22deploy.sh%22%2C%22size%22%3A1518%2C%22type%22%3A%22text%2Fx-sh%22%2C%22ext%22%3A%22sh%22%2C%22progress%22%3A%7B%22percent%22%3A99%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%22GujHr%22%2C%22card%22%3A%22file%22%7D",target:"_blank",rel:"noopener noreferrer"}},[t._v("deploy.sh"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.yuque.com/attachments/yuque/0/2020/sh/365160/1594003103562-0d3ca043-0f06-4990-9571-dee8a400f3ba.sh?_lake_card=%7B%22uid%22%3A%221594003103166-1%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2020%2Fsh%2F365160%2F1594003103562-0d3ca043-0f06-4990-9571-dee8a400f3ba.sh%22%2C%22name%22%3A%22fetch-jenkins.sh%22%2C%22size%22%3A602%2C%22type%22%3A%22text%2Fx-sh%22%2C%22ext%22%3A%22sh%22%2C%22progress%22%3A%7B%22percent%22%3A99%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%22Xpjed%22%2C%22card%22%3A%22file%22%7D",target:"_blank",rel:"noopener noreferrer"}},[t._v("fetch-jenkins.sh"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("然后 package.json 在配置如下\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/365160/1593778259694-0e7219c1-ba50-4f99-9823-ad7669353cf4.png#align=left&display=inline&height=266&margin=%5Bobject%20Object%5D&name=image.png&originHeight=266&originWidth=659&size=32796&status=done&style=none&width=659",alt:"image.png"}})]),t._v(" "),a("blockquote",[a("p",[t._v("直接执行 yarn deploy:dev 就帮助我们构建，push 到静态自然仓库，触发 jenkins 请求，部署到了 dev 了")])]),t._v(" "),a("p",[t._v("最后，CI/CD 能有很多方式实现，有待大家挖掘， 这个也算是根据实际的项目情况，打通了 Jenkins，欢迎大家多多交流。")])])}),[],!1,null,null,null);a.default=n.exports}}]);