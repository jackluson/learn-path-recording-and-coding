(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{313:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"eventloop的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eventloop的理解"}},[t._v("#")]),t._v(" EventLoop的理解")]),t._v(" "),s("h2",{attrs:{id:"javascript是单线程语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript是单线程语言"}},[t._v("#")]),t._v(" JavaScript是单线程语言")]),t._v(" "),s("blockquote",[s("p",[t._v('由于JavaScript是本身是单线程语言,如果某一个任务执行时间很长,这会导致了后面的任务一直在等待,造成了"堵塞"(同步执行),为了解决这个问题又可以免去多线程带来资源浪费的问题,JS建立了EventLoop机制,根据Wikipedia解释:"Event Loop是一个程序结构，用于等待和发送消息和事件。（a programming construct that waits for and dispatches events or messages in a program.）"')])]),t._v(" "),s("h4",{attrs:{id:"_1-javascript内存模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-javascript内存模式"}},[t._v("#")]),t._v(" 1. JavaScript内存模式")]),t._v(" "),s("p",[t._v("讲到EventLoop之前,先看一张在网上看到了Javascript的内存模型图,相信之前没看过的话,同我一样有一种拨开云雾见云开的感觉")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/jackluson/git-static/master/images/learn-path-recording-and-coding/20190418094811.png",alt:"内存模式示例图"}})]),t._v(" "),s("p",[t._v("上图设计到了栈,队列,堆的数据结构")]),t._v(" "),s("ul",[s("li",[t._v("调用栈（Call Stack）：用于主线程任务的执行")]),t._v(" "),s("li",[t._v("堆(Heap): 用于存储引用数据类型的数据,例如对象,数组等")]),t._v(" "),s("li",[t._v("任务队列(Queue): 用于存放异步任务与定时任务(MacroTask and MicroTask)")])]),t._v(" "),s("blockquote",[s("p",[t._v("结合JS来说就是一个主要负责程序从上到下的主线程(main Loop),另一个负责响应一些异步任务(文件读取,http请求等),与主线程通信的EventLoop线程")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("RunTime:浏览器提供的API（window对象，DOM相关的API等）+JS的事件循环（Event Loop）+ 事件队列（CallBack Queue）统称为RunTime（执行时），所以也这样说Node就是js的一个执行时")])]),t._v(" "),s("li",[s("p",[t._v("Call Stack调用栈：JS中所有的任务都放在调用栈执行，注意是"),s("strong",[t._v("所有")]),t._v("，不管是异步还是同步")])]),t._v(" "),s("li",[s("p",[t._v("EventLoop工作机制：回调函数通过一定的规则加入到CallBack Queue（队列结构，先进先出）中，EventLoop通过轮询，监听到Call Stack调用栈（栈结构，后进先出）为空时，才会从事件队列中（按照队列数据结构）出队，放入到调用栈中执行")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//基本逻辑代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("waitForMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tqueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("processNextMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),s("h3",{attrs:{id:"eventloop中的任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eventloop中的任务"}},[t._v("#")]),t._v(" EventLoop中的任务")]),t._v(" "),s("blockquote",[s("p",[t._v("在EventLoop轮询过程中遇到两种任务：一种宏任务（MarcoTask）也叫Task，一种叫微任务（MricoTask）")]),t._v(" "),s("h4",{attrs:{id:"macrotask-宏任务-task"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#macrotask-宏任务-task"}},[t._v("#")]),t._v(" MacroTask（宏任务,Task）")]),t._v(" "),s("p",[t._v("script全部代码、setTimeout、setInterval、setImmediate（浏览器暂时不支持，只有IE10支持，具体可见MDN）、I/O、UI Rendering,requestAnimation(浏览器)。")])]),t._v(" "),s("blockquote",[s("h4",{attrs:{id:"microtask-微任务-在es2015规范中称为job"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#microtask-微任务-在es2015规范中称为job"}},[t._v("#")]),t._v(" MicroTask（微任务,在ES2015规范中称为Job）")]),t._v(" "),s("p",[t._v("Process.nextTick（Node独有）、Promise、Object.observe(废弃)、MutationObserver\nEvent loop in Browser")])]),t._v(" "),s("p",[s("strong",[t._v("备注")]),t._v(":微任务的优先级高于宏任务")]),t._v(" "),s("h2",{attrs:{id:"eventloop执行机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eventloop执行机制"}},[t._v("#")]),t._v(" EventLoop执行机制")]),t._v(" "),s("blockquote",[s("p",[t._v("EventLoop 是一种执行机制,js本身是不提供的,在不同的执行环境下有不一样的实现,浏览器和Node.Js基于不同的技术实现各自的EventLoop")])]),t._v(" "),s("ol",[s("li",[s("h4",{attrs:{id:"浏览器的eventloop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的eventloop"}},[t._v("#")]),t._v(" 浏览器的EventLoop")]),t._v(" "),s("blockquote",[s("p",[t._v("浏览器至少有一个EventLoop即浏览器上下文EventLoop,有时也需要workers。 见于["),s("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fwww.w3.org%2FTR%2Fhtml5%2Fwebappapis.html%23event-loops",target:"_blank",rel:"noopener noreferrer"}},[t._v("html5的规范"),s("OutboundLink")],1),t._v("]，下面说即是浏览器的EventLoop")])]),t._v(" "),s("p",[s("strong",[t._v("规范:")])]),t._v(" "),s("ul",[s("li",[t._v("一个"),s("code",[t._v("event loop")]),t._v("可以有1个或多个task queue，而仅有一个"),s("code",[t._v("MicroTask Queue")]),t._v("。")]),t._v(" "),s("li",[t._v("一个"),s("code",[t._v("task queue")]),t._v("是一列有序的task, 每个task定义时都有一个"),s("code",[t._v("task source")]),t._v("，从同一个task source来的task必须放到同一个task queue，从不同源来的则被添加到不同队列。")])]),t._v(" "),s("p",[s("strong",[t._v("执行顺序:")])]),t._v(" "),s("blockquote",[s("ul",[s("li",[s("p",[t._v("调用栈"),s("code",[t._v("call stack")]),t._v(" 执行同步任务后,如果调用栈为空时,就会检查"),s("strong",[t._v("微任务队列")]),t._v(" 是否为空,如果为空的话,再去执行任务,不为空的话,一次性执行完所有的微任务")])]),t._v(" "),s("li",[s("p",[t._v("每次当个宏任务执行完之后,就会去检查"),s("strong",[t._v("微任务队列")]),t._v("("),s("code",[t._v("MicroTask")]),t._v(" )是否为空,如果不为空的话，会按照"),s("strong",[t._v("先入先")]),t._v("出的规则全部执行完"),s("strong",[t._v("微任务")]),t._v("("),s("code",[t._v("microTask")]),t._v(")后，设置"),s("strong",[t._v("微任务")]),t._v("("),s("code",[t._v("microTask")]),t._v(")队列为"),s("code",[t._v("null")]),t._v("，然后再执行"),s("strong",[t._v("宏任务")]),t._v("，如此循环。")])])])]),t._v(" "),s("p",[t._v("如浏览器的事件循环机制图解:")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/jackluson/git-static/master/images/learn-path-recording-and-coding/20190418102750.png",alt:""}})])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*注不同浏览器内核,和版本不一样结果有差异,因为对async/await的规范不一样*/")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script start'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("async1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("async2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'async1 end'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("async2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'async2 end'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("async1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setTimeout'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Promise2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'promise3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setTimeout2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Promise'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'promise1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'promise2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script end'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n'script start'--\x3e'async2 end'--\x3e'Promise'--\x3e'script end'--\x3e'promise1'--\x3e'promise2'\n--\x3e'setTimeout'--\x3e'Promise2'--\x3e'promise3'--\x3e'setTimeout2'\n*/")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[s("h3",{attrs:{id:"nodejs的event-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodejs的event-loop"}},[t._v("#")]),t._v(" NodeJS的Event Loop")])])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("Node")]),t._v("中的"),s("code",[t._v("Event Loop")]),t._v("是基于"),s("code",[t._v("libuv")]),t._v("实现的，而"),s("code",[t._v("libuv")]),t._v("是一个支持多平台,专注于异步I/O库，libuv使用异步，事件驱动的编程方式，核心是提供"),s("code",[t._v("i/o")]),t._v("的事件循环和异步回调。libuv的"),s("code",[t._v("API")]),t._v("包含有时间，非阻塞的网络，异步文件操作，子进程等等。 "),s("code",[t._v("Event Loop")]),t._v("就是在"),s("code",[t._v("libuv")]),t._v("中实现的。")])]),t._v(" "),s("p",[t._v("如示例图:")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/jackluson/git-static/master/images/learn-path-recording-and-coding/20190418201018.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"node的event-loop-执行宏队列的回调任务一共分为6个阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node的event-loop-执行宏队列的回调任务一共分为6个阶段"}},[t._v("#")]),t._v(" "),s("code",[t._v("Node")]),t._v("的"),s("code",[t._v("Event loop")]),t._v(" 执行宏队列的回调任务一共分为6个阶段")]),t._v(" "),s("blockquote",[s("p",[t._v("每个细节具体如下：")])]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("timers阶段")]),t._v("：这个阶段执行setTimeout和setInterval预定的callback")]),t._v(" "),s("p",[s("strong",[t._v("I/O callback阶段")]),t._v("：执行除了close事件的callbacks、被timers设定的callbacks、setImmediate()设定的callbacks这些之外的callbacks")]),t._v(" "),s("p",[s("strong",[t._v("idle, prepare阶段")]),t._v("：仅node内部使用")]),t._v(" "),s("p",[s("strong",[t._v("poll阶段：获取新的I/O事件")]),t._v("，适当的条件下node将阻塞在这里")]),t._v(" "),s("p",[s("strong",[t._v("check阶段")]),t._v("：执行setImmediate()设定的callbacks")]),t._v(" "),s("p",[s("strong",[t._v("close callbacks阶段")]),t._v("：执行socket.on('close', ....)这些callbacks")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/jackluson/git-static/master/images/learn-path-recording-and-coding/20190418201854.png",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("备注")]),t._v(": node执行宏任务是一个轮回,一个轮回执行的")]),t._v(" "),s("p",[s("strong",[t._v("NodeJS中宏队列主要有4个")])]),t._v(" "),s("p",[t._v("由上面的介绍可以看到，回调事件主要位于4个macrotask queue中：")]),t._v(" "),s("ol",[s("li",[t._v("Timers Queue")]),t._v(" "),s("li",[t._v("IO Callbacks Queue")]),t._v(" "),s("li",[t._v("Check Queue")]),t._v(" "),s("li",[t._v("Close Callbacks Queue")])]),t._v(" "),s("blockquote",[s("p",[t._v("这4个都属于宏队列，但是在浏览器中，可以认为只有一个宏队列，所有的macrotask都会被加到这一个宏队列中，但是在NodeJS中，不同的macrotask会被放置在不同的宏队列中。")])]),t._v(" "),s("p",[s("strong",[t._v("NodeJS中微队列主要有2个")]),t._v("：")]),t._v(" "),s("ol",[s("li",[t._v("Next Tick Queue：是放置process.nextTick(callback)的回调任务的")]),t._v(" "),s("li",[t._v("Other Micro Queue：放置其他microtask，比如Promise等")])]),t._v(" "),s("blockquote",[s("p",[t._v("在浏览器中，也可以认为只有一个微队列，所有的microtask都会被加到这一个微队列中，但是在NodeJS中，不同的microtask会被放置在不同的微队列中。")])]),t._v(" "),s("p",[t._v("具体可以参考下图辅助理解")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/jackluson/git-static/master/images/learn-path-recording-and-coding/20190418202306.png",alt:""}})]),t._v(" "),s("p",[t._v("大体解释一下NodeJS的Event Loop过程：")]),t._v(" "),s("ol",[s("li",[t._v("执行全局Script的同步代码")]),t._v(" "),s("li",[t._v("执行microtask微任务，先执行所有Next Tick Queue中的所有任务，再执行Other Microtask Queue中的所有任务")]),t._v(" "),s("li",[t._v("开始执行macrotask宏任务，共6个阶段，从第1个阶段开始执行相应每一个阶段macrotask中的所有任务，注意，这里是所有每个阶段宏任务队列的所有任务，在浏览器的Event Loop中是只取宏队列的第一个任务出来执行，每一个阶段的macrotask任务执行完毕后，开始执行微任务，也就是步骤2")]),t._v(" "),s("li",[t._v("Timers Queue -> 步骤2 -> I/O Queue -> 步骤2 -> Check Queue -> 步骤2 -> Close Callback Queue -> 步骤2 -> Timers Queue ......")]),t._v(" "),s("li",[t._v("这就是Node(10版本及低于10版本)的Event Loop")])]),t._v(" "),s("p",[s("strong",[t._v("注意!")]),t._v(" :node11以上的版本会执行一个宏任务就检查"),s("code",[t._v("microtask")]),t._v(",执行,和浏览器的event保持一致,而不是执行完当前阶段的所有宏任务再去执行"),s("code",[t._v("microtask")])]),t._v(" "),s("p",[t._v("如图所示")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/jackluson/git-static/master/images/learn-path-recording-and-coding/20190418213045.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/jackluson/git-static/master/images/learn-path-recording-and-coding/20190418213100.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("以上就是关于EventLoop的知识总结")]),t._v(" "),s("p",[t._v("参考链接:")]),t._v(" "),s("blockquote",[s("ol",[s("li",[s("strong",[t._v("浏览器和NodeJS中不同的Event Loop")]),t._v(" "),s("a",{attrs:{href:"https://github.com/kaola-fed/blog/issues/234",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/kaola-fed/blog/issues/234"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("strong",[t._v("一次弄懂Event Loop")]),t._v(" "),s("a",{attrs:{href:"https://juejin.im/post/5c3d8956e51d4511dc72c200",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.im/post/5c3d8956e51d4511dc72c200"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("strong",[t._v("阮一峰")]),t._v(" "),s("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2013/10/event_loop.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.ruanyifeng.com/blog/2013/10/event_loop.html"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("strong",[t._v("运行机制：事件队列与调用栈")]),t._v(" "),s("a",{attrs:{href:"https://github.com/bigdots/blog/issues/5",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/bigdots/blog/issues/5"),s("OutboundLink")],1)])])])])}),[],!1,null,null,null);s.default=e.exports}}]);